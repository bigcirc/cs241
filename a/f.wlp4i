start BOF procedures EOF
BOF BOF
procedures main
main INT WAIN LPAREN dcl COMMA dcl RPAREN LBRACE dcls statements RETURN expr SEMI RBRACE
INT int
WAIN wain
LPAREN (
dcl type ID
type INT STAR
INT int
STAR *
ID a
COMMA ,
dcl type ID
type INT
INT int
ID b
RPAREN )
LBRACE {
dcls dcls dcl BECOMES NULL SEMI
dcls dcls dcl BECOMES NULL SEMI
dcls
dcl type ID
type INT STAR
INT int
STAR *
ID c
BECOMES =
NULL NULL
SEMI ;
dcl type ID
type INT STAR
INT int
STAR *
ID d
BECOMES =
NULL NULL
SEMI ;
statements statements statement
statements statements statement
statements statements statement
statements statements statement
statements statements statement
statements statements statement
statements statements statement
statements statements statement
statements statements statement
statements
statement lvalue BECOMES expr SEMI
lvalue ID
ID c
BECOMES =
expr term
term factor
factor NEW INT LBRACK expr RBRACK
NEW new
INT int
LBRACK [
expr term
term factor
factor NUM
NUM 10
RBRACK ]
SEMI ;
statement lvalue BECOMES expr SEMI
lvalue STAR factor
STAR *
factor ID
ID c
BECOMES =
expr term
term factor
factor NUM
NUM 2
SEMI ;
statement lvalue BECOMES expr SEMI
lvalue STAR factor
STAR *
factor LPAREN expr RPAREN
LPAREN (
expr expr PLUS term
expr term
term factor
factor ID
ID c
PLUS +
term factor
factor NUM
NUM 1
RPAREN )
BECOMES =
expr term
term factor
factor NUM
NUM 3
SEMI ;
statement lvalue BECOMES expr SEMI
lvalue STAR factor
STAR *
factor LPAREN expr RPAREN
LPAREN (
expr expr PLUS term
expr term
term factor
factor ID
ID c
PLUS +
term factor
factor NUM
NUM 2
RPAREN )
BECOMES =
expr term
term factor
factor NUM
NUM 5
SEMI ;
statement lvalue BECOMES expr SEMI
lvalue STAR factor
STAR *
factor LPAREN expr RPAREN
LPAREN (
expr expr PLUS term
expr term
term factor
factor ID
ID c
PLUS +
term factor
factor NUM
NUM 3
RPAREN )
BECOMES =
expr term
term factor
factor NUM
NUM 7
SEMI ;
statement lvalue BECOMES expr SEMI
lvalue STAR factor
STAR *
factor LPAREN expr RPAREN
LPAREN (
expr expr PLUS term
expr term
term factor
factor ID
ID c
PLUS +
term factor
factor NUM
NUM 4
RPAREN )
BECOMES =
expr term
term factor
factor NUM
NUM 11
SEMI ;
statement lvalue BECOMES expr SEMI
lvalue ID
ID d
BECOMES =
expr term
term factor
factor ID
ID c
SEMI ;
statement PRINTLN LPAREN expr RPAREN SEMI
PRINTLN println
LPAREN (
expr term
term factor
factor STAR factor
STAR *
factor ID
ID d
RPAREN )
SEMI ;
statement PRINTLN LPAREN expr RPAREN SEMI
PRINTLN println
LPAREN (
expr expr PLUS term
expr term
term factor
factor STAR factor
STAR *
factor ID
ID d
PLUS +
term factor
factor NUM
NUM 2
RPAREN )
SEMI ;
RETURN return
expr term
term factor
factor NUM
NUM 0
SEMI ;
RBRACE }
EOF EOF
