INT int
ID f
LPAREN (
INT int
ID a
RPAREN )
LBRACE {
RETURN return
ID a
PLUS +
NUM 4
SEMI ;
RBRACE }
INT int
ID g
LPAREN (
INT int
ID a
RPAREN )
LBRACE {
RETURN return
ID a
PLUS +
NUM 9
SEMI ;
RBRACE }
INT int
ID bar
LPAREN (
RPAREN )
LBRACE {
INT int
STAR *
ID arr
BECOMES =
NULL NULL
SEMI ;
ID arr
BECOMES =
NEW new
INT int
LBRACK [
NUM 5
RBRACK ]
SEMI ;
STAR *
LPAREN (
ID arr
PLUS +
NUM 3
RPAREN )
BECOMES =
NUM 2
SEMI ;
DELETE delete
LBRACK [
RBRACK ]
ID arr
SEMI ;
RETURN return
NUM 10
SEMI ;
RBRACE }
INT int
ID foo
LPAREN (
INT int
ID a
COMMA ,
INT int
STAR *
ID b
COMMA ,
INT int
ID c
COMMA ,
INT int
ID d
COMMA ,
INT int
STAR *
ID e
RPAREN )
LBRACE {
IF if
LPAREN (
ID f
LPAREN (
ID a
RPAREN )
LT <
ID g
LPAREN (
ID c
RPAREN )
RPAREN )
LBRACE {
PRINTLN println
LPAREN (
NUM 0
RPAREN )
SEMI ;
RBRACE }
ELSE else
LBRACE {
RBRACE }
IF if
LPAREN (
ID f
LPAREN (
ID a
RPAREN )
GT >
ID g
LPAREN (
ID c
RPAREN )
RPAREN )
LBRACE {
PRINTLN println
LPAREN (
NUM 1
RPAREN )
SEMI ;
RBRACE }
ELSE else
LBRACE {
RBRACE }
IF if
LPAREN (
ID f
LPAREN (
ID a
RPAREN )
EQ ==
ID g
LPAREN (
ID c
RPAREN )
RPAREN )
LBRACE {
PRINTLN println
LPAREN (
NUM 2
RPAREN )
SEMI ;
RBRACE }
ELSE else
LBRACE {
RBRACE }
IF if
LPAREN (
ID f
LPAREN (
ID a
RPAREN )
NE !=
ID g
LPAREN (
ID c
RPAREN )
RPAREN )
LBRACE {
PRINTLN println
LPAREN (
NUM 3
RPAREN )
SEMI ;
RBRACE }
ELSE else
LBRACE {
RBRACE }
IF if
LPAREN (
ID f
LPAREN (
ID a
RPAREN )
LE <=
ID g
LPAREN (
ID c
RPAREN )
RPAREN )
LBRACE {
PRINTLN println
LPAREN (
NUM 4
RPAREN )
SEMI ;
RBRACE }
ELSE else
LBRACE {
RBRACE }
IF if
LPAREN (
ID f
LPAREN (
ID a
RPAREN )
GE >=
ID g
LPAREN (
ID c
RPAREN )
RPAREN )
LBRACE {
PRINTLN println
LPAREN (
NUM 5
RPAREN )
SEMI ;
RBRACE }
ELSE else
LBRACE {
RBRACE }
STAR *
LPAREN (
ID b
PLUS +
ID bar
LPAREN (
RPAREN )
RPAREN )
BECOMES =
ID bar
LPAREN (
RPAREN )
SEMI ;
RETURN return
ID a
PLUS +
STAR *
LPAREN (
ID b
PLUS +
NUM 10
RPAREN )
PLUS +
ID c
PLUS +
ID d
PLUS +
STAR *
ID e
SEMI ;
RBRACE }
INT int
WAIN wain
LPAREN (
INT int
ID a
COMMA ,
INT int
ID b
RPAREN )
LBRACE {
INT int
STAR *
ID arr
BECOMES =
NULL NULL
SEMI ;
ID arr
BECOMES =
NEW new
INT int
LBRACK [
NUM 40
RBRACK ]
SEMI ;
RETURN return
ID foo
LPAREN (
ID a
COMMA ,
ID arr
COMMA ,
ID a
COMMA ,
ID b
COMMA ,
AMP &
ID a
RPAREN )
SEMI ;
RBRACE }
